// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/FullAdder.hdl

/**
 * Computes the sum of three bits.
 */

CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    // Put you code here:

    // Both OR and XOR work
    // they both work because:
    // => when you are "adding" the carry values
    // => you will never get two 1's for the carry
    // => which is when the Xor and Or truth tables differ

    // HalfAdder(a=a, b=b, sum=halfsum, carry=c1);
    // HalfAdder(a=halfsum, b=c, sum=sum, carry=c2);
    // Or(a=c1, b=c2, out=carry);

    HalfAdder(a=a, b=b, sum=halfsum, carry=c1);
    HalfAdder(a=halfsum, b=c, sum=sum, carry=c2);
    Xor(a=c1, b=c2, out=carry);

}
